WITH
    SINGLE_QUERIES AS (
        SELECT ANONID, QUERYID, MIN(URLID) AS URLID, TIMEID
        FROM AOL_SCHEMA.FACTS
        GROUP BY ANONID, TIMEID, QUERYID
    ),
    PLAYER_PERFORMANCE AS (
        SELECT p.ID,
            p.PLAYER_NAME, SUM(pm.GOALS) SEASON_GOALS, SUM(pm.YELLOW_CARDS) SEASON_YELLOWS, SUM(pm.RED_CARDS) SEASON_REDS
        FROM AOL_SCHEMA.PLAYERDIM p JOIN AOL_SCHEMA.MATCH_FACTS mf ON p.ID = mf.PLAYER_ID 
		JOIN AOL_SCHEMA.PLAYER_MATCHDIM pm ON pm.ID = mf.PLAYER_MATCH_ID
        GROUP BY p.ID, p.PLAYER_NAME
    )
SELECT
    p.PLAYER_NAME, SEASON_GOALS, SEASON_YELLOWS, SEASON_REDS, COUNT(pq.QUERY) SEARCHES,
    DENSE_RANK() OVER (PARTITION BY
            CASE WHEN p.PLAYER_NAME IS NULL THEN 0 ELSE 1 END
            ORDER BY COUNT(pq.QUERY) DESC) SEARCH_RANK,
    (SEASON_GOALS + SEASON_YELLOWS + SEASON_REDS) PLAYER_EVENTS,
    CASE
        WHEN p.PLAYER_NAME IS NULL THEN NULL
        ELSE DENSE_RANK() OVER (PARTITION BY
                CASE WHEN p.PLAYER_NAME IS NULL THEN 0 ELSE 1 END
                ORDER BY SEASON_GOALS + SEASON_YELLOWS + SEASON_REDS DESC)
    END PLAYER_EVENT_RANK
FROM
    AOL_SCHEMA.PLAYER_QUERYDIM pq
    JOIN SINGLE_QUERIES s ON pq.ID = s.QUERYID
    RIGHT JOIN PLAYER_PERFORMANCE p ON TRIM(pq.QUERY) = p.PLAYER_NAME
GROUP BY CUBE (p.PLAYER_NAME, SEASON_GOALS, SEASON_YELLOWS, SEASON_REDS)
HAVING p.PLAYER_NAME IS NOT NULL AND SEASON_GOALS IS NOT NULL AND 
		SEASON_YELLOWS IS NOT NULL AND SEASON_REDS IS NOT NULL
ORDER BY PLAYER_EVENT_RANK, SEARCH_RANK;